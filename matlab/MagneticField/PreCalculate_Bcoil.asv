%% Simple calculation of Magnetic fields created by the coils 
% Effects of the conductive structures such as shell and transformer core
% are not considered
close all, clear all

%% Coordinates of the conductive structures
coord = init_coord;

figure, clf, hold on
plot(coord.VertStab.R, coord.VertStab.Z, 'color', "#0072BD", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3, 'DisplayName','exVertStab')
plot(coord.HorStab.R, coord.HorStab.Z, 'color', "#D95319", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3,'DisplayName','exHorStab')
plot(coord.Vessel.R, coord.Vessel.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Vessel')
plot(coord.InnerQuadr.R, coord.InnerQuadr.Z, 'color',"#D95319",'LineStyle','none','Marker', 'o', 'LineWidth', 0.2, 'DisplayName','Inner Quadrupole')
plot(coord.CopperShell.R, coord.CopperShell.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Copper Shell')
legend('Location','northeastoutside');
axis square
hold off

%% Create structure
% involving all precomputed values of magnetic field generated by current
% of 1A flowing in the given coils; evaluated for each point of given grid

Bcoils = struct();

%% 'Plasma' grid 
dx = 0.005;
dy = 0.005;
x = 0.3:dx:0.5;
y = -0.1:dy:0.1;
[R, Z] = meshgrid(x, y);

%% 'Tokamak' grid 
dx = 0.01;
dy = 0.01;
x = 0.1:dx:0.7;
y = -0.3:dy:0.3;
[R, Z] = meshgrid(x, y);

Bcoils.meshgrid.x = x;
Bcoils.meshgrid.y = y;
Bcoils.meshgrid.R = R;
Bcoils.meshgrid.Z = Z;

%% constants
n = 1e4;
c.mu0 = 4e-7 *pi;

%% VERTICAL POSITION STABILIZATION
%TODO: Predpocitat pro kazdy zavit, pak bude stavit prenasobit hodnotou
% proudu v nem prochazejici(bez znamenka), ziskat tak Bloop a B = sum(Bloop)
% dynamicky vyvoj je pak dan prave hodnotami proudu (dano indukcnosti a odporem)
% -> reseni sady  obycejnych dif. rovnic pro proudy 

% time consuming -> think of sth else -> proste se to predpocita a
% ulozi

%TODO: nekde asi chyba zda se ze pocitano jen pro jednu civku a to nekde
%uplne jinde

coord_ext = coord.VertStab;
Bcoils = get_Bcoil(coord_ext, Bcoils, 'VertStab', c, n);

%% HORIZONTAL POSITION STABILIZATION
coord_ext = coord.HorStab;
Bcoils = get_Bcoil(coord_ext, Bcoils, 'HorStab', c, n);

%% INNER QUADRUPOLE
coord_ext = coord.InnerQuadr;
Bcoils = get_Bcoil(coord_ext, Bcoils, 'InnerQuadr', c, n);

%% plot results
plot_results(coord, R, Z, Bcoils, 'VertStab', 'num')
plot_results(coord, R, Z, Bcoils, 'HorStab', 'num')
plot_results(coord, R, Z, Bcoils, 'InnerQuadr', 'num')

%% Save data
save("MagneticField/Bcoils_attempt01.mat", "Bcoils")

%%
function plot_results(coord, R, Z, Bcoils, fname, method)
    figure('Name', [fname, ', ', method]), clf, hold on
    switch method
        case 'num'
            pcolor(R,Z, sqrt(Bcoils.(fname).num.Br_sum.^2 + Bcoils.(fname).num.Bz_sum.^2))
        case 'ell'    
            pcolor(R,Z, sqrt(Bcoils.(fname).ell.Br_sum.^2 + Bcoils.(fname).ell.Bz_sum.^2))
    end        
    plot(coord.(fname).R, coord.(fname).Z, 'color', "#D95319", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3, 'DisplayName','exVertStab')
    plot(coord.Vessel.R, coord.Vessel.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Vessel')
    axis square
    hold off
end