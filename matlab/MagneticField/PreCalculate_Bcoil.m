%% Simple calculation of Magnetic fields created by the coils 
% Effects of the conductive structures such as shell and transformer core
% are not considered
close all, clear all

%% Coordinates of the conductive structures
coord = init_coord;
plot_scheme = false;
if plot_scheme
    figure, clf, hold on
    plot(coord.VertStab.R, coord.VertStab.Z, 'color', "#0072BD", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3, 'DisplayName','exVertStab')
    plot(coord.HorStab.R, coord.HorStab.Z, 'color', "#D95319", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3,'DisplayName','exHorStab')
    plot(coord.Vessel.R, coord.Vessel.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Vessel')
    plot(coord.InnerQuadr.R, coord.InnerQuadr.Z, 'color',"#D95319",'LineStyle','none','Marker', 'o', 'LineWidth', 0.2, 'DisplayName','Inner Quadrupole')
    plot(coord.CopperShell.R, coord.CopperShell.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Copper Shell')
    legend('Location','northeastoutside');
    axis square
    hold off
end

%% Create structure
% involving all precomputed values of magnetic field generated by current
% of 1A flowing in the given coils; evaluated for each point of given grid

Bcoils = struct();
% Select mode; 'load_from_file'/'calculate'
% mode = 'load_from_file';
mode = 'calculate';
%% 'Plasma' grid 
% dx = 0.005;
% dy = 0.005;
% x = 0.3:dx:0.5;
% y = -0.1:dy:0.1;
% [R, Z] = meshgrid(x, y);

%% 'Tokamak' grid 
% dense mesh grid => time-consuming (TODO: add tic toc)
dx = 0.01;
dy = 0.01;

% dx = 0.05;
% dy = 0.05;

x = 0.1:dx:0.7;
y = -0.3:dy:0.3;
[R, Z] = meshgrid(x, y);

%%
Bcoils.meshgrid.x = x;
Bcoils.meshgrid.y = y;
Bcoils.meshgrid.R = R;
Bcoils.meshgrid.Z = Z;

%% constants
n = 1e4;
c.mu0 = 4e-7 *pi;

%%
switch mode
    case 'calculate'
        %TODO: Predpocitat pro kazdy zavit, pak bude stacit prenasobit hodnotou
        % proudu v nem prochazejiciho(bez znamenka), ziskat tak Bloop a B = sum(Bloop)
        % dynamicky vyvoj je pak dan prave hodnotami proudu (dano indukcnosti a odporem)
        % -> reseni sady obycejnych dif. rovnic pro proudy 
        
        % time consuming -> think of sth else -> proste se to predpocita a
        % ulozi
        
        % VERTICAL POSITION STABILIZATION
        coord_ext = coord.VertStab;
        Bcoils = get_Bcoil(coord_ext, Bcoils, 'VertStab', c, n);

        % HORIZONTAL POSITION STABILIZATION
        coord_ext = coord.HorStab;
        Bcoils = get_Bcoil(coord_ext, Bcoils, 'HorStab', c, n);

        % INNER QUADRUPOLE
        coord_ext = coord.InnerQuadr;
        Bcoils = get_Bcoil(coord_ext, Bcoils, 'InnerQuadr', c, n);

        % TOKAMAK'S CHAMBER - very time-consuming
        % coord_ext = coord.Vessel;
        % Bcoils    = get_Bcoil(coord_ext, Bcoils, 'Vessel', c, n);
    
    case 'load_from_file'
        % load data from file
        load Bcoils_stabilization.mat
end        


%% Plot results - Numerical method
field = 'Bpol'; method = 'num'; plot_type = 'pcolor';
plot_results(coord, Bcoils, 'VertStab', method, field, plot_type)
plot_results(coord, Bcoils, 'HorStab', method, field, plot_type)
plot_results(coord, Bcoils, 'InnerQuadr', method, field, plot_type)

%% Contour plot
field = 'Bz'; method = 'num'; plot_type = 'contourf';
plot_results(coord, Bcoils, 'VertStab', method, field, plot_type)
plot_results(coord, Bcoils, 'HorStab', method, field, plot_type)
plot_results(coord, Bcoils, 'InnerQuadr', method, field, plot_type)

%% Plot results - Elliptic integrals
field = 'Bz'; method = 'ell'; plot_type = 'pcolor';
plot_results(coord, Bcoils, 'VertStab', method, field, plot_type)
plot_results(coord, Bcoils, 'HorStab', method, field, plot_type)
plot_results(coord, Bcoils, 'InnerQuadr', method, field, plot_type)
%% Plot results - Vessel - TODO: pro num vychazi asi spatne!
field = 'Bz'; method = 'ell'; plot_type = 'contourf';
plot_results(coord, Bcoils, 'Vessel', method, field, plot_type)
field = 'Br'; plot_type = 'contourf';
plot_results(coord, Bcoils, 'Vessel', method, field, plot_type)

%% Save data
% save("MagneticField/Bcoils_vessel.mat", "Bcoils")

%% Save figs
% savefigs('MagneticField/plots/Bcoils_stabilization')

%%
function plot_results(coord, Bcoils, fname, method, field, plot_type)
    % TODO: Ujasnit si, zda to brat v absolutni hodnote ci nikoliv!!!
    % TODO: Overit, ze nevadi log skala!
    % !!! Matice s hodnotami magnetickeho pole se musi transponovat, 
    % aby se dilo s meshgrid!!!

    R = Bcoils.meshgrid.R;
    Z = Bcoils.meshgrid.Z;

    figure('Name', [fname, ', ', method, ', ', field, ', ', plot_type]), clf, hold on
    switch field
        case 'Bpol'
            B = sqrt(Bcoils.(fname).(method).Br_sum.^2 + Bcoils.(fname).num.Bz_sum.^2)';
        case 'Br'
            B = abs(Bcoils.(fname).(method).Br_sum');
        case 'Bz'
            B = abs(Bcoils.(fname).(method).Bz_sum');
    end            

    switch plot_type
        case 'pcolor'
            pcolor(R, Z, log10(B))
            c = colorbar;
            c.Label.String = 'B [mT/kA]'; 
        case 'contour'
            dense = 30;
            contour(R, Z, (B), dense,'ShowText','off')
            c = colorbar;
            c.Label.String = 'log_{10} B [mT/kA]'; 
        case 'contourf'
            dense = 20;
            contourf(R, Z, log10(B), dense, 'ShowText','off')
            c = colorbar;
            c.Label.String = 'log_{10} B [mT/kA]'; 
    end        
    % Plot coils, vessel
    plot(coord.(fname).R, coord.(fname).Z, 'color', "#D95319", 'LineStyle', 'none','Marker','.', 'LineWidth', 0.3, 'DisplayName','exVertStab')
    plot(coord.Vessel.R, coord.Vessel.Z, 'k.', 'LineWidth', 0.2, 'DisplayName','Vessel')
    
    axis square
    hold off

end
